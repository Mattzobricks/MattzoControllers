[platformio]
default_envs = az-delivery-devkit-v4

; This controller must be configured through config files in the folder you define below.
; Configure your network in the `network_config.json` file.
; Configure the controller in the `controller_config.json` file.
; See the `/data_example` folder for example configuration files. 
; Run `platformio.exe run --target uploadfs` to upload the data-folder content to the ESP32.
; moved to my_platformio.ini
; for Linux you have to add a / before $PROJECT_DIR
data_dir = $PROJECT_DIR/data

[common]
; To show memory usage every minute, uncomment the line -DTICKER=1
; To use w5500 module for wired connections, uncomment the line -DWIRED
; To see what the hubs report back on not chached messages uncomment the lines,
;   this is for degugging only and should only be used if instructed to do so
; To reduce the delays in the BLE driverloops change the value of DRIVERTASKELAY,
;   changing this yourself without a hint of the developers may cause strange behavours
;   and even crashes!
additional_build_flags =
;    -DWIRED
;	 -DTICKER=1
;    -DDEBUGNOTIFYBUWIZZ2
;    -DDEBUGNOTIFYPU
;    -DDEBUGNOTIFYPU
;    -DDRIVERTASKELAY=250
upload_com_port = COM3
; for macOS, just as example
;upload_com_port = /dev/tty.usb

[env:az-delivery-devkit-v4]
; Use either the 'upload_port' line above if the ESP32 is connected to your PC's USB port or enable/configure the three lines below to use OTA updates.
; The IP address should match that of the controller on your network.
; The <otaPassword> should match the current password from the network_config.json you previously uploaded to the controller.
;upload_protocol = espota
;upload_port = 192.168.x.y
;upload_protocol = espota
;upload_flags = --auth=<ota password>